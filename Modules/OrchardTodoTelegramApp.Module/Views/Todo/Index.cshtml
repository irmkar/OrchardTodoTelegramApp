@{
    Layout = "_Layout";
}

<div id="app" class="container mt-5" v-cloak>
    <h2 class="mb-4">{{ message }}</h2>

    <ul class="list-group mb-4">
        <li class="list-group-item d-flex justify-content-between align-items-center" v-for="item in todos" :key="item.RowKey">
            {{ item.title }} - {{ item.isCompleted ? "Completed" : "Not Completed" }}
            <div>
                <button class="btn btn-sm btn-primary" v-on:click="editTodo(item)">Edit</button>
                <button class="btn btn-sm btn-danger ml-2" v-on:click="deleteTodo(item)">Delete</button>
            </div>
        </li>
    </ul>

    <form v-on:submit.prevent="createTodo" class="form-inline">
        <div class="form-group mr-2">
            <input v-model="newTodoTitle" class="form-control" placeholder="Enter new title" />
        </div>
        <div class="form-group mr-2">
            <label for="isCompleted">Completed?</label>
            <input type="checkbox" v-model="newTodoIsCompleted" id="isCompleted" class="form-check-input ml-2" />
        </div>
        <button type="submit" class="btn btn-success">Add</button>
    </form>
</div>

<style>
    [v-cloak] {
        display: none;
    }
</style>

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>

    document.addEventListener('DOMContentLoaded', function () {

            new Vue({
                el: '#app',
                data: {
                    message: 'To-Do List',
                    todos: [],  
                    newTodoTitle: '',  
                    newTodoIsCompleted: false 
                },
                mounted() {
                    this.getTodos(); 
                },
                methods: {
                    async getTodos() {
                        const response = await fetch('/Module/Todo/GetAll');
                        this.todos = await response.json();
                    },
                    async createTodo() {
                        const newTodo = {
                            Title: this.newTodoTitle,
                            IsCompleted: this.newTodoIsCompleted
                        };

                        const response = await fetch('/Module/Todo/Create', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            redirect: "follow",
                            body: JSON.stringify(newTodo)
                        });

                        if (response.ok) {
                            this.getTodos();  // Baþarýlý olursa listeyi yenile
                            this.newTodoTitle = '';  // Formu temizle
                            this.newTodoIsCompleted = false; // Checkbox'ý sýfýrla
                        }
                    },
                    async editTodo(item) {
                        // item.isCompleted = !item.isCompleted;  // Tamamlanma durumu deðiþtiriliyor
                        // const response = await fetch(`/Module/Todo/Edit`, {
                        //     method: 'POST',
                        //     headers: {
                        //         'Content-Type': 'application/json'
                        //     },
                        //     body: JSON.stringify(item)
                        // });

                        // if (response.ok) {
                        //     this.getTodos();
                        // }
                        // 
                        window.location.href = "/Module/Todo/Edit?id=" + item.rowKey
                    },
                    async deleteTodo(item) {
                            const response = await fetch("/Module/Todo/Delete?id=" + item.rowKey, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            this.getTodos();
                        }
                    }
            }
            });
        });

</script>
